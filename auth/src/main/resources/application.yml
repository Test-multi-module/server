spring: #TODO set it according to your data. it is only template now!
  security:
    oauth2: #отвечает за настройку OAuth2-клиента, чтобы приложение могло взаимодействовать с Keycloak и использовать его для авторизации.
      authorization:
        client:
          registration:
            my-client:
              client-id: 6ee8d602-2704-4b2c-86e8-0b81e65a8bc1
              client-secret: l73vFSXpxGU22mK392R4qTXko5UJ2ku1
              authorization-grant-type: authorization_code
              redirect-uri: http://localhost:8180/login/oauth2/code/client
              scope: read,write
          provider:
            my-provider:
              authorization-uri: http://localhost:8180/realms/server-realm/protocol/openid-connect/auth
              token-uri: http://localhost:8180/oauth2/token
              user-info-uri: http://localhost:8180/userinfo
              user-name-attribute: sub
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8180/realms/server-realm
          jwk-set-uri: http://localhost:8180/realms/server-realm/protocol/openid-connect/certs
  datasource:
    url: jdbc:postgresql://localhost:5433/keycloak_db
    username: keycloak_adm_user
    password: 24o62o!!
  server:
    port: 8080

logging:
  level:
      org.keycloak: DEBUG
      org.springframework.security: DEBUG
      org.springframework.web: DEBUG